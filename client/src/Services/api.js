// Import the 'parseOrDefaulf' function from the 'authSlice' module.
import { parseOrDefaulf } from "./authSlice"

// Define a function to get the access token.
// It calls 'parseOrDefaulf' and accesses the 'access_token' property if it exists.
const getAccessToken = () => parseOrDefaulf()?.access_token

// Define a function to create the 'Authorization' header with the access token.
const authHeader = () => ({ Authorization: `Bearer ${getAccessToken()}` })

// Define a generic request function that makes HTTP requests.
const request = (url, data, options = {}) => {
  return fetch(url, {
    ...(options), // Spread the 'options' object.
    data, // Include the 'data' parameter.
    headers: {
      ...(options?.headers ?? {}), // Spread 'options.headers' or use an empty object if it doesn't exist.
      ...(authHeader()) // Spread the 'Authorization' header generated by 'authHeader'.
    }
  })
}

// Define an API object with a 'getPatients' method.
export const api = {
  getPatients: () =>
    request('/therapist/patients') // Make a request to '/therapist/patients'.
      .then(res => /** @type {import("./authSlice").User} */(res.json())), // Parse the response as JSON.
}

